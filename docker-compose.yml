version: '3'

services:
  metrics:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: 'telegram-bots-nginx'
    restart: always
    ports:
      - "8080:80"
    volumes:
      - .:/app/
    networks:
      - tier
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  metricsphp:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: 'telegram-bots-php'
    restart: always
    volumes:
      - .:/app/
    networks:
      - tier
    logging:
      options:
        max-size: "10m"
        max-file: "3"


  mysql:
    image: mysql:5.7.22
    container_name: 'telegram-bots-mysql'
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: '%'
#    volumes:
#      - ./docker/sql/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - tier

  redis:
    container_name: 'telegram-bots-redis'
    image: redis:3.2
    restart: always
    ports:
      - "127.0.0.1:6379:6379/tcp"
    networks:
      - tier

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: 'telegram-bots-pma'
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./uploads.ini:/usr/local/etc/php/conf.d/pma.ini
    ports:
      - '8006:80'
    networks:
      - tier

  prometheus:
    image: prom/prometheus:v2.0.0
    container_name: 'telegram-bots-prometheus'
    command: --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - tier

  grafana:
    container_name: 'telegram-bots-grafana'
    image: grafana/grafana:7.1.1
    restart: always
    ports:
      - 3000:3000
    environment:
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - grafanadata:/var/lib/grafana
    networks:
      - tier

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: 'telegram-bots-grafana-renderer'
    restart: always
    ports:
      - 8081:8081
    networks:
      - tier

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: 'telegram-bots-node-exporter'
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'

volumes:
  grafanadata: {}

networks:
  tier:
    external:
      name: telegram-bots-network
